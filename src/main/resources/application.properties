#mysql数据库的配置
spring.datasource.druid.username=root
spring.datasource.druid.password=123456
spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://127.0.0.1/project?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&useSSL=true




###  数据源类别阿里巴巴的DruidDataSource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
### 初始化大小，最小，最大
spring.datasource.druid.initial-size=10
#连接池中最小的活跃连接数
spring.datasource.druid.min-idle=8
#最大连接池数量
spring.datasource.druid.max-active=20
### 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
spring.datasource.druid.maxWait=60000
#有两个含义：#1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了(true)这个配置会降低性能。
spring.datasource.druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat日志用的filter:log4j2防御sql注入的filter:wall
#spring.datasource.filters=stat,wall,log4j2

###########################通用mapper########
# 主键自增回写方法,默认值MYSQL,详细说明请看文档
mapper.identity=MYSQL
mapper.mappers=tk.mybatis.mapper.common.BaseMapper
# 设置 insert 和 update 中，是否判断字符串类型!=''
mapper.not-empty=true

########## 分页插件 ##########
pagehelper.helper-dialect=mysql
pagehelper.params=count=countSql
#分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
# pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=false
#支持通过 Mapper 接口参数来传递分页参数，默认值false，
# 分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
pagehelper.support-methods-arguments=true


########
mybatis.type-aliases-package=com.jnshu.domain.
#加载Mybatis Mapper映射文件
mybatis.mapper-locations=classpath:mapper/*.xml

